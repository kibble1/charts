# Default values for cachet.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

cachet:
  image:
    repository: cachethq/docker
    tag: "{{ .Chart.AppVersion }}"
    pullPolicy: Always
    restartPolicy: Always
    service:
      type: ClusterIP
      port: 80
    HostName: ""
    nameOverride: ""
    fullnameOverride: ""
    nodeSelector: {}
    tolerations: []
    affinity: {}

postgresql:
  image:
    registry: docker.io
    repository: postgres
    tag: "12-alpine"
    pullPolicy: IfNotPresent
    restartPolicy: Always
  nodeSelector: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
  service:
    type: ClusterIP
    port: 5432

imagePullSecrets: []

ingress:
  enabled: true
  annotations: {}
  host: chart-example.localhost
  tls: []
  path: /
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# creates cachet database via posgres-controller
database:
  create: true
  host: cachet-db.example.com
  port: 5432
  name: cachet
  username: cachet
  instance_id: shared
  driver: pssql

env:
  public:
    # Application environments
    APP_DEBUG: false
    APP_LOG: errorlog
    DB_DRIVER: pgsql
    DOCKER: true
    CACHE_DRIVER: database
    SESSION_DRIVER: database
    QUEUE_DRIVER: database
    CACHET_EMOJI: false
    CACHET_BEACON: false
    # Email find them here  https://docs.cachethq.io/docs/configuring-mail
    MAIL_DRIVER: smtp
    MAIL_HOST: ""
    MAIL_ADDRESS: ""
    MAIL_PORT: 25
    MAIL_NAME: ""
    MAIL_ENCRYPTION: tls

  # Update all with your own values
  private:
    APP_KEY: ""
    DB_PASSWORD: ""
    MAIL_USERNAME: ""
    MAIL_PASSWORD: ""

test:
  enabled: true

extraLabels: {}
