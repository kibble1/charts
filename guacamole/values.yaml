#
# Chart-wide settings
#
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

#
# Settings for the Guacamole daemon guacd
#
daemon:
  image:
    repository: guacamole/guacd
    pullPolicy: IfNotPresent

  # Enable PodDisruptionBudget
  pdb:
    enabled: false
    minAvailable: 1

  networkPolicy:
    #
    # Deploy a restrictive network policy
    # allowing connections only from the frontend
    #
    enabled: true

#
# Settings for the Guacamole frontend
#
frontend:
  image:
    repository: guacamole/guacamole
    pullPolicy: IfNotPresent
  # Enable PodDisruptionBudget
  pdb:
    enabled: false
    minAvailable: 1
  ingress:
    enabled: false
    class: 'nginx'
    annotations:
      nginx.ingress.kubernetes.io/app-root: /guacamole
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/affinity: 'cookie'
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600s"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600s"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection \$http_connection;
      haproxy.org/path-rewrite: '/(.*) /guacamole/\1'
    hosts: []
      # - host: example.com
      #   paths: ['/']
    tls: []
      # - hosts:
      #     - example.com
      #   secretName: ingress-tls

#
# Database settings
#
database:
  kind: postgres # Only supported value at the moment
  postgres:
    host: ''
    database: ''
    user: ''
    password: ''
    # Use an already existing secret
    existingSecret: ''
    existingSecretUsernameKey: 'username'
    existingSecretPasswordKey: 'password'

#
# Hook settings
#
hooks:
  #
  # Inizializes the provided database on chart installation
  #
  initializeDatabase:
    enabled: true
    postgresImage: postgres:13
  #
  # Updates the provided database on chart update
  #
  upgradeDatabase:
    enabled: true
    postgresImage: postgres:13
